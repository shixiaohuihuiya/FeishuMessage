name: Feishu Daily Reminder with Signature

on:
  workflow_dispatch:  # 手动触发
  schedule:
    # 北京时间早上9点 (UTC+8) = UTC时间凌晨1点
    - cron: '0 1 * * *'
    # 北京时间下午3点 (UTC+8) = UTC时间早上7点
    - cron: '0 7 * * *'

env:
  FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
  FEISHU_SIGN_SECRET: ${{ secrets.FEISHU_SIGN_SECRET }}

jobs:
  send-daily-reminder:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Configuration
        run: |
          echo "🔧 检查环境变量配置..."
          
          if [ -z "$FEISHU_WEBHOOK_URL" ]; then
            echo "❌ 错误: FEISHU_WEBHOOK_URL 未配置"
            echo "请在 GitHub Secrets 中设置 FEISHU_WEBHOOK_URL"
            exit 1
          else
            echo "✅ FEISHU_WEBHOOK_URL 已配置"
          fi
          
          if [ -z "$FEISHU_SIGN_SECRET" ]; then
            echo "❌ 错误: FEISHU_SIGN_SECRET 未配置"
            echo "请在 GitHub Secrets 中设置 FEISHU_SIGN_SECRET"
            exit 1
          else
            echo "✅ FEISHU_SIGN_SECRET 已配置"
          fi

      - name: Calculate Beijing Time
        id: time-check
        run: |
          # 获取当前UTC时间
          UTC_HOUR=$(date -u +%H)
          echo "当前UTC时间: $UTC_HOUR:00"
          
          # 转换为北京时间 (UTC+8)
          BEIJING_HOUR=$(( (UTC_HOUR + 8) % 24 ))
          echo "当前北京时间: $BEIJING_HOUR:00"
          
          # 判断消息类型
          if [ $BEIJING_HOUR -lt 12 ]; then
            echo "PERIOD=morning" >> $GITHUB_OUTPUT
            echo "SCHEDULE_NAME=上午提醒" >> $GITHUB_OUTPUT
            echo "🕘 发送上午提醒消息"
          else
            echo "PERIOD=afternoon" >> $GITHUB_OUTPUT
            echo "SCHEDULE_NAME=下午提醒" >> $GITHUB_OUTPUT
            echo "🕒 发送下午提醒消息"
          fi

      - name: Generate Signature
        id: signature
        run: |
          # 生成时间戳（秒级）
          TIMESTAMP=$(date +%s)
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          
          # 生成随机数
          NONCE=$(openssl rand -hex 16)
          echo "nonce=$NONCE" >> $GITHUB_OUTPUT
          
          # 生成飞书签名
          SIGNATURE_STRING="${TIMESTAMP}\n${FEISHU_SIGN_SECRET}"
          SIGNATURE=$(printf "$SIGNATURE_STRING" | openssl dgst -sha256 -binary | base64)
          echo "signature=$SIGNATURE" >> $GITHUB_OUTPUT
          
          echo "✅ 签名生成成功"
          echo "Timestamp: $TIMESTAMP"
          echo "Nonce: $NONCE"
          echo "Signature: $SIGNATURE"

      - name: Send Morning Message
        if: steps.time-check.outputs.PERIOD == 'morning'
        run: |
          BEIJING_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
          echo "🕘 发送上午消息 - $BEIJING_TIME"
          
          # 构建消息数据
          MESSAGE_JSON='{
            "msg_type": "interactive",
            "card": {
              "config": {
                "wide_screen_mode": true
              },
              "header": {
                "title": {
                  "tag": "plain_text",
                  "content": "🌞 早安！开始今天的工作吧"
                },
                "template": "wathet"
              },
              "elements": [
                {
                  "tag": "div",
                  "text": {
                    "tag": "lark_md",
                    "content": "**📋 今日工作提醒**\n\n🎯 **重要任务检查：**\n• 60表是否已上传？\n• 昨日工作是否已完成？\n• 今日计划是否明确？\n\n💫 **今日寄语：**\n新的一天，新的开始！保持积极心态，工作效率翻倍！🚀\n\n⏰ **提醒时间：** '"$BEIJING_TIME"'\n🔧 **触发方式：** '"${{ github.event_name }}"'"
                  }
                },
                {
                  "tag": "hr"
                },
                {
                  "tag": "div",
                  "text": {
                    "tag": "lark_md",
                    "content": "🌈 **工作小贴士：**\n• 先完成最重要的任务\n• 保持专注，一次只做一件事\n• 记得适当休息，保护眼睛\n• 保持桌面整洁，心情更愉悦"
                  }
                },
                {
                  "tag": "action",
                  "actions": [
                    {
                      "tag": "button",
                      "text": {
                        "tag": "plain_text",
                        "content": "👍 收到，开始工作"
                      },
                      "type": "primary"
                    }
                  ]
                }
              ]
            }
          }'
          
          # 发送消息（带签名验证）
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            "$FEISHU_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -H "X-Lark-Signature: ${{ steps.signature.outputs.signature }}" \
            -H "X-Lark-Request-Timestamp: ${{ steps.signature.outputs.timestamp }}" \
            -H "X-Lark-Request-Nonce: ${{ steps.signature.outputs.nonce }}" \
            -d "$MESSAGE_JSON")
          
          # 检查响应
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "HTTP 状态码: $HTTP_CODE"
          echo "响应内容: $RESPONSE_BODY"
          
          if [ "$HTTP_CODE" -eq 200 ] && echo "$RESPONSE_BODY" | grep -q '"StatusCode":0'; then
            echo "✅ 上午提醒消息发送成功！"
          else
            echo "❌ 消息发送失败"
            echo "请检查签名密钥是否正确"
            exit 1
          fi

      - name: Send Afternoon Message
        if: steps.time-check.outputs.PERIOD == 'afternoon'
        run: |
          BEIJING_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
          echo "🕒 发送下午消息 - $BEIJING_TIME"
          
          # 构建消息数据
          MESSAGE_JSON='{
            "msg_type": "interactive",
            "card": {
              "config": {
                "wide_screen_mode": true
              },
              "header": {
                "title": {
                  "tag": "plain_text",
                  "content": "☕ 下午好！继续加油"
                },
                "template": "orange"
              },
              "elements": [
                {
                  "tag": "div",
                  "text": {
                    "tag": "lark_md",
                    "content": "**📊 下午工作检查**\n\n🎯 **进度确认：**\n• 60表是否已按时上传？\n• 上午任务完成情况如何？\n• 下午工作重点明确了吗？\n\n💪 **加油鼓励：**\n下午是创造奇迹的时间！继续保持专注，胜利在望！✨\n\n⏰ **提醒时间：** '"$BEIJING_TIME"'\n🔧 **触发方式：** '"${{ github.event_name }}"'"
                  }
                },
                {
                  "tag": "hr"
                },
                {
                  "tag": "div",
                  "text": {
                    "tag": "lark_md",
                    "content": "🌟 **下午工作建议：**\n• 回顾上午进度，调整下午计划\n• 处理需要深度思考的任务\n• 适当活动，保持精力充沛\n• 为明天的工作做好准备"
                  }
                },
                {
                  "tag": "action",
                  "actions": [
                    {
                      "tag": "button",
                      "text": {
                        "tag": "plain_text",
                        "content": "💪 继续努力"
                      },
                      "type": "primary"
                    }
                  ]
                }
              ]
            }
          }'
          
          # 发送消息（带签名验证）
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            "$FEISHU_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -H "X-Lark-Signature: ${{ steps.signature.outputs.signature }}" \
            -H "X-Lark-Request-Timestamp: ${{ steps.signature.outputs.timestamp }}" \
            -H "X-Lark-Request-Nonce: ${{ steps.signature.outputs.nonce }}" \
            -d "$MESSAGE_JSON")
          
          # 检查响应
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "HTTP 状态码: $HTTP_CODE"
          echo "响应内容: $RESPONSE_BODY"
          
          if [ "$HTTP_CODE" -eq 200 ] && echo "$RESPONSE_BODY" | grep -q '"StatusCode":0'; then
            echo "✅ 下午提醒消息发送成功！"
          else
            echo "❌ 消息发送失败"
            echo "请检查签名密钥是否正确"
            exit 1
          fi

      - name: Success Notification
        if: success()
        run: |
          echo "🎉 飞书每日提醒任务完成！"
          echo "================================="
          echo "📅 发送时间: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')"
          echo "📝 消息类型: ${{ steps.time-check.outputs.SCHEDULE_NAME }}"
          echo "🔧 触发方式: ${{ github.event_name }}"
          echo "🔐 签名验证: 已启用"
          echo "================================="
          echo "请检查飞书群聊是否收到消息 📱"
